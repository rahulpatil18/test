name: Test with Poetry Cache

on:
  workflow_dispatch:

env:
  PYTHON_VERSION: "3.11"
  POETRY_VERSION: "1.8.2"

jobs:
  test:
    name: Run Tests with Cache
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install pipx
        run: |
          python -m pip install --upgrade pip
          python -m pip install pipx
          pipx ensurepath

      - name: Install Poetry via pipx
        run: |
          pipx install poetry==${{ env.POETRY_VERSION }}

      - name: Add Poetry to PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Verify Poetry version
        run: poetry --version

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-cache-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Restore Poetry virtualenv from cache
        id: poetry-cache
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ hashFiles('**/poetry.lock') }}

      - name: Log Cache Info
        run: echo "Cache hit: ${{ steps.poetry-cache.outputs.cache-hit }}"

      - name: Install dependencies (only if no cache)
        if: steps.poetry-cache.outputs.cache-hit != 'true'
        run: |
          poetry config virtualenvs.in-project true
          poetry env use python${{ env.PYTHON_VERSION }}
          poetry install --no-interaction

      - name: Run Tests
        run: make tests
